kotlin version: 2.2.10
error message: java.lang.RuntimeException: Exception while generating code for:
FUN name:AppUsageScreen visibility:public modality:FINAL returnType:kotlin.Unit
  annotations:
    Composable
  BLOCK_BODY
    VAR name:viewModel type:com.example.scrolltracker.ui.ScrollAnalyticsViewModel [val]
      TYPE_OP type=com.example.scrolltracker.ui.ScrollAnalyticsViewModel origin=IMPLICIT_CAST typeOperand=com.example.scrolltracker.ui.ScrollAnalyticsViewModel
        CALL 'public final fun hiltViewModel$default <VM> (viewModelStoreOwner: androidx.lifecycle.ViewModelStoreOwner?, key: kotlin.String?, $mask0: kotlin.Int, $handler: kotlin.Any?): VM of androidx.hilt.navigation.compose.HiltViewModelKt.hiltViewModel$default [inline] declared in androidx.hilt.navigation.compose.HiltViewModelKt' type=VM of androidx.hilt.navigation.compose.HiltViewModelKt.hiltViewModel$default origin=DEFAULT_DISPATCH_CALL
          TYPE_ARG VM: com.example.scrolltracker.ui.ScrollAnalyticsViewModel
          ARG viewModelStoreOwner: COMPOSITE type=androidx.lifecycle.ViewModelStoreOwner? origin=DEFAULT_VALUE
            CONST Null type=androidx.lifecycle.ViewModelStoreOwner? value=null
          ARG key: COMPOSITE type=kotlin.String? origin=DEFAULT_VALUE
            CONST Null type=kotlin.String? value=null
          ARG $mask0: CONST Int type=kotlin.Int value=3
          ARG $handler: CONST Null type=kotlin.Any? value=null
    VAR PROPERTY_DELEGATE name:appUsageStats$delegate type:androidx.compose.runtime.State<kotlin.collections.List<com.example.scrolltracker.data.dao.AppUsageStats>> [val]
      TYPE_OP type=androidx.compose.runtime.State<kotlin.collections.List<com.example.scrolltracker.data.dao.AppUsageStats>> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.State<kotlin.collections.List<com.example.scrolltracker.data.dao.AppUsageStats>>
        CALL 'public final fun collectAsState$default <T> (<this>: kotlinx.coroutines.flow.StateFlow<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default>, context: kotlin.coroutines.CoroutineContext?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> declared in androidx.compose.runtime.SnapshotStateKt' type=androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> origin=DEFAULT_DISPATCH_CALL
          TYPE_ARG T: kotlin.collections.List<com.example.scrolltracker.data.dao.AppUsageStats>
          ARG <this>: CALL 'public final fun <get-appUsageStats> (): kotlinx.coroutines.flow.StateFlow<kotlin.collections.List<com.example.scrolltracker.data.dao.AppUsageStats>> declared in com.example.scrolltracker.ui.ScrollAnalyticsViewModel' type=kotlinx.coroutines.flow.StateFlow<kotlin.collections.List<com.example.scrolltracker.data.dao.AppUsageStats>> origin=GET_PROPERTY
            ARG <this>: GET_VAR 'val viewModel: com.example.scrolltracker.ui.ScrollAnalyticsViewModel [val] declared in com.example.scrolltracker.ui.screens.AppUsageScreenKt.AppUsageScreen' type=com.example.scrolltracker.ui.ScrollAnalyticsViewModel origin=null
          ARG context: COMPOSITE type=kotlin.coroutines.CoroutineContext? origin=DEFAULT_VALUE
            CONST Null type=kotlin.coroutines.CoroutineContext? value=null
          ARG $mask0: CONST Int type=kotlin.Int value=1
          ARG $handler: CONST Null type=kotlin.Any? value=null
    VAR PROPERTY_DELEGATE name:hourlyUsageStats$delegate type:androidx.compose.runtime.State<kotlin.collections.List<com.example.scrolltracker.data.dao.HourlyUsageStats>> [val]
      TYPE_OP type=androidx.compose.runtime.State<kotlin.collections.List<com.example.scrolltracker.data.dao.HourlyUsageStats>> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.State<kotlin.collections.List<com.example.scrolltracker.data.dao.HourlyUsageStats>>
        CALL 'public final fun collectAsState$default <T> (<this>: kotlinx.coroutines.flow.StateFlow<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default>, context: kotlin.coroutines.CoroutineContext?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> declared in androidx.compose.runtime.SnapshotStateKt' type=androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> origin=DEFAULT_DISPATCH_CALL
          TYPE_ARG T: kotlin.collections.List<com.example.scrolltracker.data.dao.HourlyUsageStats>
          ARG <this>: CALL 'public final fun <get-hourlyUsageStats> (): kotlinx.coroutines.flow.StateFlow<kotlin.collections.List<com.example.scrolltracker.data.dao.HourlyUsageStats>> declared in com.example.scrolltracker.ui.ScrollAnalyticsViewModel' type=kotlinx.coroutines.flow.StateFlow<kotlin.collections.List<com.example.scrolltracker.data.dao.HourlyUsageStats>> origin=GET_PROPERTY
            ARG <this>: GET_VAR 'val viewModel: com.example.scrolltracker.ui.ScrollAnalyticsViewModel [val] declared in com.example.scrolltracker.ui.screens.AppUsageScreenKt.AppUsageScreen' type=com.example.scrolltracker.ui.ScrollAnalyticsViewModel origin=null
          ARG context: COMPOSITE type=kotlin.coroutines.CoroutineContext? origin=DEFAULT_VALUE
            CONST Null type=kotlin.coroutines.CoroutineContext? value=null
          ARG $mask0: CONST Int type=kotlin.Int value=1
          ARG $handler: CONST Null type=kotlin.Any? value=null
    VAR PROPERTY_DELEGATE name:selectedTimeRange$delegate type:androidx.compose.runtime.State<com.example.scrolltracker.ui.TimeRange> [val]
      TYPE_OP type=androidx.compose.runtime.State<com.example.scrolltracker.ui.TimeRange> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.State<com.example.scrolltracker.ui.TimeRange>
        CALL 'public final fun collectAsState$default <T> (<this>: kotlinx.coroutines.flow.StateFlow<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default>, context: kotlin.coroutines.CoroutineContext?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> declared in androidx.compose.runtime.SnapshotStateKt' type=androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> origin=DEFAULT_DISPATCH_CALL
          TYPE_ARG T: com.example.scrolltracker.ui.TimeRange
          ARG <this>: CALL 'public final fun <get-selectedTimeRange> (): kotlinx.coroutines.flow.StateFlow<com.example.scrolltracker.ui.TimeRange> declared in com.example.scrolltracker.ui.ScrollAnalyticsViewModel' type=kotlinx.coroutines.flow.StateFlow<com.example.scrolltracker.ui.TimeRange> origin=GET_PROPERTY
            ARG <this>: GET_VAR 'val viewModel: com.example.scrolltracker.ui.ScrollAnalyticsViewModel [val] declared in com.example.scrolltracker.ui.screens.AppUsageScreenKt.AppUsageScreen' type=com.example.scrolltracker.ui.ScrollAnalyticsViewModel origin=null
          ARG context: COMPOSITE type=kotlin.coroutines.CoroutineContext? origin=DEFAULT_VALUE
            CONST Null type=kotlin.coroutines.CoroutineContext? value=null
          ARG $mask0: CONST Int type=kotlin.Int value=1
          ARG $handler: CONST Null type=kotlin.Any? value=null
    CALL 'public final fun LazyColumn$default (modifier: androidx.compose.ui.Modifier?, state: androidx.compose.foundation.lazy.LazyListState?, contentPadding: androidx.compose.foundation.layout.PaddingValues?, reverseLayout: kotlin.Boolean, verticalArrangement: androidx.compose.foundation.layout.Arrangement.Vertical?, horizontalAlignment: androidx.compose.ui.Alignment.Horizontal?, flingBehavior: androidx.compose.foundation.gestures.FlingBehavior?, userScrollEnabled: kotlin.Boolean, overscrollEffect: androidx.compose.foundation.OverscrollEffect?, content: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.foundation.lazy.LazyDslKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      ARG modifier: CALL 'public final fun background-bw27NRU$default ($this$background: androidx.compose.ui.Modifier, color: androidx.compose.ui.graphics.Color, shape: androidx.compose.ui.graphics.Shape?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.BackgroundKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
        ARG $this$background: CALL 'public final fun fillMaxSize$default (<this>: androidx.compose.ui.Modifier, fraction: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
          ARG <this>: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
          ARG fraction: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
            CONST Float type=kotlin.Float value=0.0
          ARG $mask0: CONST Int type=kotlin.Int value=1
          ARG $handler: CONST Null type=kotlin.Any? value=null
        ARG color: CALL 'public final fun getBackground-0d7_KjU (): androidx.compose.ui.graphics.Color declared in androidx.compose.material3.ColorScheme' type=androidx.compose.ui.graphics.Color origin=GET_PROPERTY
          ARG <this>: CALL 'public final fun <get-colorScheme> (): androidx.compose.material3.ColorScheme declared in androidx.compose.material3.MaterialTheme' type=androidx.compose.material3.ColorScheme origin=GET_PROPERTY
            ARG <this>: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:INSTANCE type:androidx.compose.material3.MaterialTheme visibility:public [final,static] declared in androidx.compose.material3.MaterialTheme' type=androidx.compose.material3.MaterialTheme origin=null
        ARG shape: COMPOSITE type=androidx.compose.ui.graphics.Shape? origin=DEFAULT_VALUE
          CONST Null type=androidx.compose.ui.graphics.Shape? value=null
        ARG $mask0: CONST Int type=kotlin.Int value=2
        ARG $handler: CONST Null type=kotlin.Any? value=null
      ARG state: COMPOSITE type=androidx.compose.foundation.lazy.LazyListState? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.foundation.lazy.LazyListState? value=null
      ARG contentPadding: CALL 'public final fun PaddingValues-0680j_4 (all: androidx.compose.ui.unit.Dp): androidx.compose.foundation.layout.PaddingValues declared in androidx.compose.foundation.layout.PaddingKt' type=androidx.compose.foundation.layout.PaddingValues origin=null
        ARG all: CALL 'public final fun <get-dp> (<this>: kotlin.Int): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
          ARG <this>: CONST Int type=kotlin.Int value=16
      ARG reverseLayout: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
        CONST Boolean type=kotlin.Boolean value=false
      ARG verticalArrangement: CALL 'public final fun spacedBy-0680j_4 (space: androidx.compose.ui.unit.Dp): androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical declared in androidx.compose.foundation.layout.Arrangement' type=androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical origin=null
        ARG <this>: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:INSTANCE type:androidx.compose.foundation.layout.Arrangement visibility:public [final,static] declared in androidx.compose.foundation.layout.Arrangement' type=androidx.compose.foundation.layout.Arrangement origin=null
        ARG space: CALL 'public final fun <get-dp> (<this>: kotlin.Int): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
          ARG <this>: CONST Int type=kotlin.Int value=16
      ARG horizontalAlignment: COMPOSITE type=androidx.compose.ui.Alignment.Horizontal? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.Alignment.Horizontal? value=null
      ARG flingBehavior: COMPOSITE type=androidx.compose.foundation.gestures.FlingBehavior? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.foundation.gestures.FlingBehavior? value=null
      ARG userScrollEnabled: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
        CONST Boolean type=kotlin.Boolean value=false
      ARG overscrollEffect: COMPOSITE type=androidx.compose.foundation.OverscrollEffect? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.foundation.OverscrollEffect? value=null
      ARG content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope, kotlin.Unit> origin=null
          TYPE_ARG T: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope, kotlin.Unit>
          ARG dynamicCall: CALL 'public final fun invoke (p0: com.example.scrolltracker.ui.ScrollAnalyticsViewModel, p1: androidx.compose.runtime.State<com.example.scrolltracker.ui.TimeRange>, p2: androidx.compose.runtime.State<kotlin.collections.List<com.example.scrolltracker.data.dao.HourlyUsageStats>>, p3: androidx.compose.runtime.State<kotlin.collections.List<com.example.scrolltracker.data.dao.AppUsageStats>>): @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope, kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope, kotlin.Unit> origin=null
            ARG p0: GET_VAR 'val viewModel: com.example.scrolltracker.ui.ScrollAnalyticsViewModel [val] declared in com.example.scrolltracker.ui.screens.AppUsageScreenKt.AppUsageScreen' type=com.example.scrolltracker.ui.ScrollAnalyticsViewModel origin=null
            ARG p1: GET_VAR 'val selectedTimeRange$delegate: androidx.compose.runtime.State<com.example.scrolltracker.ui.TimeRange> [val] declared in com.example.scrolltracker.ui.screens.AppUsageScreenKt.AppUsageScreen' type=androidx.compose.runtime.State<com.example.scrolltracker.ui.TimeRange> origin=null
            ARG p2: GET_VAR 'val hourlyUsageStats$delegate: androidx.compose.runtime.State<kotlin.collections.List<com.example.scrolltracker.data.dao.HourlyUsageStats>> [val] declared in com.example.scrolltracker.ui.screens.AppUsageScreenKt.AppUsageScreen' type=androidx.compose.runtime.State<kotlin.collections.List<com.example.scrolltracker.data.dao.HourlyUsageStats>> origin=null
            ARG p3: GET_VAR 'val appUsageStats$delegate: androidx.compose.runtime.State<kotlin.collections.List<com.example.scrolltracker.data.dao.AppUsageStats>> [val] declared in com.example.scrolltracker.ui.screens.AppUsageScreenKt.AppUsageScreen' type=androidx.compose.runtime.State<kotlin.collections.List<com.example.scrolltracker.data.dao.AppUsageStats>> origin=null
          ARG bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
            ARG tag: CONST Int type=kotlin.Int value=6
            ARG owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
            ARG name: CONST String type=kotlin.String value="metafactory"
            ARG descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
            ARG isInterface: CONST Boolean type=kotlin.Boolean value=false
          ARG bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              ARG method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
            RAW_FUNCTION_REFERENCE 'private final fun AppUsageScreen$lambda$7 ($viewModel: com.example.scrolltracker.ui.ScrollAnalyticsViewModel, $selectedTimeRange$delegate: androidx.compose.runtime.State<com.example.scrolltracker.ui.TimeRange>, $hourlyUsageStats$delegate: androidx.compose.runtime.State<kotlin.collections.List<com.example.scrolltracker.data.dao.HourlyUsageStats>>, $appUsageStats$delegate: androidx.compose.runtime.State<kotlin.collections.List<com.example.scrolltracker.data.dao.AppUsageStats>>, $this$LazyColumn: androidx.compose.foundation.lazy.LazyListScope): kotlin.Unit? declared in com.example.scrolltracker.ui.screens.AppUsageScreenKt' type=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              ARG method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: androidx.compose.foundation.lazy.LazyListScope): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
      ARG $mask0: CONST Int type=kotlin.Int value=490
      ARG $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:43)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:422)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:439)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:164)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateFile(JvmIrCodegenFactory.kt:419)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:388)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.runCodegen$cli(KotlinToJVMBytecodeCompiler.kt:431)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:95)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:36)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:29)
	at org.jetbrains.kotlin.cli.pipeline.PipelinePhase.phaseBody(PipelinePhase.kt:68)
	at org.jetbrains.kotlin.cli.pipeline.PipelinePhase.phaseBody(PipelinePhase.kt:58)
	at org.jetbrains.kotlin.config.phaser.NamedCompilerPhase.invoke(CompilerPhase.kt:102)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:22)
	at org.jetbrains.kotlin.config.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:53)
	at org.jetbrains.kotlin.cli.pipeline.AbstractCliPipeline.runPhasedPipeline(AbstractCliPipeline.kt:109)
	at org.jetbrains.kotlin.cli.pipeline.AbstractCliPipeline.execute(AbstractCliPipeline.kt:68)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecutePhased(K2JVMCompiler.kt:78)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecutePhased(K2JVMCompiler.kt:44)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:90)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:352)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunnerBase.runCompiler(IncrementalJvmCompilerRunnerBase.kt:175)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunnerBase.runCompiler(IncrementalJvmCompilerRunnerBase.kt:38)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:504)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:421)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:306)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:133)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:679)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:93)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1806)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun hiltViewModel$default <VM> (viewModelStoreOwner: androidx.lifecycle.ViewModelStoreOwner?, key: kotlin.String?, $mask0: kotlin.Int, $handler: kotlin.Any?): VM of androidx.hilt.navigation.compose.HiltViewModelKt.hiltViewModel$default [inline] declared in androidx.hilt.navigation.compose.HiltViewModelKt' type=VM of androidx.hilt.navigation.compose.HiltViewModelKt.hiltViewModel$default origin=DEFAULT_DISPATCH_CALL
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:129)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:82)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:586)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitTypeOperator(ExpressionCodegen.kt:1075)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitTypeOperator(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall.accept(IrTypeOperatorCall.kt:26)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:725)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:527)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:532)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:233)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:126)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	... 45 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/hilt/navigation/compose/HiltViewModelKt;.hiltViewModel$default(Landroidx/lifecycle/ViewModelStoreOwner;Ljava/lang/String;ILjava/lang/Object;)Landroidx/lifecycle/ViewModel;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:129)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction$lambda$2(SourceCompilerForInline.kt:98)
	at org.jetbrains.kotlin.codegen.inline.InlineCache.computeMethodBytes(InlineCache.kt:90)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:93)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:65)
	... 62 more


